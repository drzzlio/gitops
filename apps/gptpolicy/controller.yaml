apiVersion: policy.jspolicy.com/v1beta1
kind: JsPolicy
metadata:
  name: gptpolicy-controller.drzzl.io
spec:
  type: Controller
  resources:
  - gptpolicies
  scope: Namespaced
  operations:
  - CREATE
  - DELETE
  javascript: |
    print(`got event ${JSON.stringify(request)}`)

    const log = msg => print(`${request.name}: ${msg}`)

    if(request.operation === 'DELETE') {
      // The first delete with a finalizer has an object
      if(request.object) {
        //TODO: Delete the owned jspolicy instance
        log(`removing owned jspolicy instance`)
      } else {
        log(`not handling delete event`)
      }

      // Done with delete handling, jump out
      allow()
    }

    log(`handling creation event`)
    // Check if the gpt.drzzl.io/genversion annotation matches resourceVersion,
    // if not then we need to create or update the owned jspolicy
    if(request.object.metadata.annotations?.['gpt.drzl.io/genversions'] !== request.object.metadata.resourceVersion) {
      log(`generating jspolicy code`)
      //TODO: make a call to GPT API
      //TODO: update genversions annotation

      // Done with creation handling, bye
      allow()
    }

    log(`no action taken`)
