apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.4
  name: kmsissuers.cert-manager.drzzl.io
spec:
  group: cert-manager.drzzl.io
  names:
    kind: KMSIssuer
    listKind: KMSIssuerList
    plural: kmsissuers
    singular: kmsissuer
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KMSIssuer is the Schema for the kmsissuers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KMSIssuerSpec defines the desired state of KMSIssuer
            properties:
              commonName:
                description: 'CommonName is a common name to be used on the Certificate.
                  The CommonName should have a length of 64 characters or fewer to
                  avoid generating invalid CSRs. This value is ignored by TLS clients
                  when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4'
                type: string
              duration:
                description: Certificate default Duration
                type: string
              keyRef:
                description: The KMSCryptoKey backing this issuer Currently supports
                  an external URI or a reference to a KCC KMSCryptoKey instance
                properties:
                  external:
                    description: The external name of the referenced resource
                    type: string
                  kind:
                    description: Kind of the referent.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                type: object
              renewBefore:
                description: RenewBefore is the amount of time before the currently
                  issued certificate’s notAfter time that the issuer will begin to
                  attempt to renew the certificate. If this value is greater than
                  the total duration of the certificate (i.e. notAfter - notBefore),
                  it will be automatically renewed 2/3rds of the way through the certificate’s
                  duration.
                type: string
            required:
            - keyRef
            type: object
          status:
            description: KMSIssuerStatus defines the observed state of KMSIssuer
            properties:
              certificate:
                description: Byte slice containing a PEM encoded signed certificate
                  of the CA
                format: byte
                type: string
              conditions:
                items:
                  description: Condition contains condition information.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      allOf:
                      - enum:
                        - "True"
                        - "False"
                        - Unknown
                      - enum:
                        - "True"
                        - "False"
                        - Unknown
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                      type: string
                    type:
                      description: Type of the condition, currently ('Ready').
                      enum:
                      - Ready
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kms-issuer-controller-manager
  namespace: kms-issuer-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kms-issuer-leader-election-role
  namespace: kms-issuer-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kms-issuer-cert-manager-controller-approve:cert-manager-drzzl-io
rules:
- apiGroups:
  - cert-manager.io
  resourceNames:
  - kmsissuers.cert-manager.drzzl.io/*
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kms-issuer-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - cert-manager.drzzl.io
  resources:
  - kmsissuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.drzzl.io
  resources:
  - kmsissuers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cert-manager.io
  resources:
  - certificaterequests
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificaterequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kms.cnrm.cloud.google.com
  resources:
  - kmscryptokeys
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kms.cnrm.cloud.google.com
  resources:
  - kmscryptokeys/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kms-issuer-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kms-issuer-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kms-issuer-leader-election-rolebinding
  namespace: kms-issuer-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kms-issuer-leader-election-role
subjects:
- kind: ServiceAccount
  name: kms-issuer-controller-manager
  namespace: kms-issuer-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kms-issuer-cert-manager-controller-approve:cert-manager-drzzl-io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kms-issuer-cert-manager-controller-approve:cert-manager-drzzl-io
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kms-issuer-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kms-issuer-manager-role
subjects:
- kind: ServiceAccount
  name: kms-issuer-controller-manager
  namespace: kms-issuer-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kms-issuer-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kms-issuer-proxy-role
subjects:
- kind: ServiceAccount
  name: kms-issuer-controller-manager
  namespace: kms-issuer-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: dcb53387
kind: ConfigMap
metadata:
  name: kms-issuer-manager-config
  namespace: kms-issuer-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kms-issuer-controller-manager-metrics-service
  namespace: kms-issuer-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: kms-issuer-controller-manager
  namespace: kms-issuer-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/drzzlio/kms-issuer:dev
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kms-issuer-controller-manager
      terminationGracePeriodSeconds: 10
